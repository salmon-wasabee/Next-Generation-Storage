#include <AccelStepper.h>

// Define stepper motor connections and create AccelStepper objects
#define dirPin1 12
#define stepPin1 13
#define enablePin1 11
#define dirPin2 9
#define stepPin2 10
#define enablePin2 8

// Define the number of microsteps per revolution
#define MICROSTEPS_PER_REV 25000

AccelStepper stepper1(1, stepPin1, dirPin1);
AccelStepper stepper2(1, stepPin2, dirPin2);

void setup() {
  Serial.begin(115200); // Increased baud rate for faster communication
  pinMode(enablePin1, OUTPUT);
  pinMode(enablePin2, OUTPUT);
  digitalWrite(enablePin1, LOW);
  digitalWrite(enablePin2, LOW);
  
  // Set the maximum speed and acceleration
  stepper1.setMaxSpeed(10000); // Adjust this value based on your motor's specifications
  stepper1.setAcceleration(5000); // Adjust this value to find the fastest acceleration that doesn't cause the motor to stall
  stepper2.setMaxSpeed(10000); // Same for the second motor
  stepper2.setAcceleration(5000); // And its acceleration
}

void loop() {
  if (Serial.available() > 0) {
    String input = Serial.readStringUntil('\n');
    if (input == "CW1") {
      digitalWrite(enablePin1, LOW);
      stepper1.move(MICROSTEPS_PER_REV); // Non-blocking call
    } else if (input == "CCW1") {
      digitalWrite(enablePin1, LOW);
      stepper1.move(-MICROSTEPS_PER_REV); // Non-blocking call
    } else if (input == "CW2") {
      digitalWrite(enablePin2, LOW);
      stepper2.move(MICROSTEPS_PER_REV); // Non-blocking call
    } else if (input == "CCW2") {
      digitalWrite(enablePin2, LOW);
      stepper2.move(-MICROSTEPS_PER_REV); // Non-blocking call
    } else if (input == "STOP") {
      digitalWrite(enablePin1, HIGH);
      digitalWrite(enablePin2, HIGH);
    }
  }
  stepper1.run();
  stepper2.run();
}
